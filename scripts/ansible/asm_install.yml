---
- hosts: "asm"
  become: "yes"
  roles:
    - "City-of-Bloomington.apache"
  tasks:
    - name: "Mysql setup"
      include_tasks: "tasks/mysql.yml"
      when: "asm_db.type == 'MYSQL'"

    - name: "Postgres setup"
      include_tasks: "tasks/postgresql.yml"
      when: "asm_db.type == 'POSTGRESQL'"

    - name: "Install Animal Shelter Manger dependencies"
      apt:
        name: "{{ packages }}"
        state: "present"
      vars:
        packages:
          - "libapache2-mod-wsgi-py3"
          - "make"
          - "python3-pil"
          - "python3-webpy"
          - "imagemagick"
          - "wkhtmltopdf"
          - "python3-requests"
          - "memcached"
          - "python3-memcache"
          - "postfix"
          - "curl"

    - name: "Activate Apache WSGI Module"
      apache2_module:
        name: "wsgi"

    - name: "Extract release"
      unarchive:
        src: "{{ asm_archive.path }}"
        dest: "/usr/local/src"
      register: "release"

    - name: "Remove old release"
      file:
        path: "{{ asm_path }}"
        state: "absent"
      when: "release.changed"

    - name: "Create ASM directories"
      file:
        path: "{{ item }}"
        state: "directory"
        owner: "www-data"
        group: "staff"
        mode: "u=rwx,g=rwxs,o=rx"
      with_items:
        - "{{ asm_path }}"
        - "{{ asm_data }}"
        - "{{ asm_data }}/cache"
        - "{{ asm_data }}/media"
        - "{{ asm_data }}/wsgi"
        - "/srv/backups/asm"
        - "/var/log/cron"

    - name: "Install release"
      command: "rsync -rlv /usr/local/src/{{ asm_archive.name }}/ {{ asm_path }}/"
      when: "release.changed"

    - name: "Update apache configuration"
      template:
        src: "apache.conf"
        dest: "/etc/apache2/sites-enabled/conf.d/asm.conf"
      notify: "apache_restart"

    - name: "Update sitedefs"
      template:
        src: "asm3.conf"
        dest: "{{ asm_data }}/asm3.conf"

    - name: "Install WSGI script"
      template:
        src: "asm3.wsgi"
        dest: "{{ asm_data }}/wsgi/asm3.wsgi"

    - name: "Install CRON"
      template:
        src: "cron.sh"
        dest: "/etc/cron.daily/asm"
        mode: "0755"

    - name: "Configure backup credentials"
      template:
        src: "backup.cnf"
        dest: "/etc/cron.daily/backup.d/asm.cnf"
        mode: "0600"
...
